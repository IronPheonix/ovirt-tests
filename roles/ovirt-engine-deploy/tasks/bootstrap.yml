---
## Bootstrap
- name: Add datacenter
  ovirt_datacenters:
    auth: "{{ ovirt_auth }}"
    state: present
    name: "{{ datacenter }}"
    local: false
    compatibility_version: "{{ compatibility_version }}"

- name: Add cluster
  ovirt_clusters:
    auth: "{{ ovirt_auth }}"
    state: present
    name: "{{ cluster }}"
    cpu_type: "{{ cpu_type }}"
    compatibility_version: "{{ compatibility_version }}"
    datacenter: "{{ datacenter }}"

# fatal: [engine]: FAILED! => {"changed": false, "failed": true, "msg": "Fault reason is \"Operation Failed\".
# Fault detail is \"[Cannot edit Quota. Limitation can not be configured as specific and general for the same Quota.
# Please choose whether the limitation should be enforced on the Data Center (global) or for specific storage domain or cluster.]\".
# HTTP response code is 409."}
- name: Add DC quota
  ovirt_quotas:
    auth: "{{ ovirt_auth }}"
    state: present
    name: "quota1"
    datacenter: "{{ datacenter }}"
    storage_grace: 40
    storage_threshold: 60
    cluster_grace: 30
    cluster_threshold: 70
    clusters:
      - memory: 10
        cpu: 6
    storages:
      - name: "{{ data_name }}"
        size: 100

- name: fetch quota
  ovirt_quotas_facts:
    auth: "{{ ovirt_auth }}"
    datacenter: "{{ datacenter }}"

- name: print
  debug:
    var: ovirt_quotas

- name: del quota
  ovirt_quotas:
    auth: "{{ ovirt_auth }}"
    state: absent
    name: "quota1"
    datacenter: "{{ datacenter }}"

- name: Add host to oVirt engine
  ovirt_hosts:
    auth: "{{ ovirt_auth }}"
    state: present
    name: "host{{ item }}"
    address: "192.168.200.1{{ item }}"
    password: "{{ host_password }}"
    cluster: "{{ cluster }}"
  with_items:
    - 1
    - 2
  async: 120
  poll: 0
  register: hosts

- name: Wait for hosts to be added
  async_status: "jid={{ item.ansible_job_id }}"
  register: job_result
  with_items: "{{ hosts.results }}"
  until: job_result.finished
  retries: 30
  delay: 7

#- name: Install dashboard package
#  yum:
#    name: cockpit-ovirt-dashboard
#    state: present
#  delegate_to: "{{ item }}"
#  with_items:
#    - host1
#    - host2
#  ignore_errors: yes

- name: Add NFS storage
  ovirt_storage_domains:
    auth: "{{ ovirt_auth }}"
    name: "{{ data_name }}"
    host: host1
    data_center: "{{ datacenter }}"
    nfs:
      address: 192.168.200.13
      path: /exports/nfs_clean/share1

- name: list
  ovirt_storage_domains_facts:
    auth: "{{ ovirt_auth }}"
    pattern: "name=d* and datacenter=test*"

- name: p
  debug:
    var: ovirt_storage_domains

- name: Get lun id
  shell: multipath -ll -v1 |sort |head -n1
  delegate_to: storage
  become: yes
  register: lun_id
  changed_when: lun_id is undefined

- name: Add iSCSI storage
  ovirt_storage_domains:
    auth: "{{ ovirt_auth }}"
    name: "{{ data_name2 }}"
    host: host1
    data_center: "{{ datacenter }}"
    iscsi:
      address: 192.168.200.13
      target: iqn.2014-07.org.ovirt:storage
      lun_id: "{{ lun_id.stdout }}"
  async: 120
  poll: 0
  register: data_iscsi

- name: Add export storage
  ovirt_storage_domains:
    auth: "{{ ovirt_auth }}"
    host: host1
    name: "{{ export_name }}"
    data_center: "{{ datacenter }}"
    domain_function: export
    nfs:
      address: 192.168.200.13
      path: /exports/nfs_exported
  async: 120
  poll: 0
  register: iso_nfs

- name: Add iso storage
  ovirt_storage_domains:
    auth: "{{ ovirt_auth }}"
    host: host1
    name: "{{ iso_name }}"
    data_center: "{{ datacenter }}"
    domain_function: iso
    nfs:
      address: 192.168.200.13
      path: /exports/iso
  async: 120
  poll: 0
  register: export_nfs

- name: Wait for storages to be added
  async_status: "jid={{ item.ansible_job_id }}"
  register: job_result
  with_items:
    - "{{ data_iscsi }}"
    - "{{ iso_nfs }}"
    - "{{ export_nfs }}"
  until: job_result.finished
  retries: 30
  delay: 5

# TODO: import_non_template_from_glance

- name: Import template from glance
  ovirt_templates:
    auth: "{{ ovirt_auth }}"
    state: imported
    name: "{{ template }}"
    image_provider:  "{{ image_provider }}"
    image_disk: "{{ cirros_image }}"
    #export_domain: "{{ export_name }}"
    storage_domain: "{{ data_name }}"
    cluster: "{{ cluster }}"

- name: templates
  ovirt_templates_facts:
    auth: "{{ ovirt_auth }}"
    pattern: name=c*
  
- name: p
  debug:
    var: ovirt_templates

- name: Update quota mode of dacenter
  ovirt_datacenters:
    auth: "{{ ovirt_auth }}"
    name: "{{ datacenter }}"
    quota_mode: audit

- name: Add VM network
  ovirt_networks:
    auth: "{{ ovirt_auth }}"
    datacenter: "{{ datacenter }}"
    name: "{{ vlan_100 }}"
    vlan_tag: 100
    vm_network: true
    description: VM Network on VLAN 100

- name: Add non VM network
  ovirt_networks:
    auth: "{{ ovirt_auth }}"
    datacenter: "{{ datacenter }}"
    name: "{{ vlan_200 }}"
    vlan_tag: 200
    vm_network: false
    description: Non VM Network on VLAN 200, MTU 9000
    mtu: 9000
